#!/usr/bin/env python

import argparse
import logging

import apsis.service.client

#-------------------------------------------------------------------------------

def print_lines(lines):
    for line in lines:
        print(line)


def prefix(prefix, lines):
    for line in lines:
        yield prefix + line


def format_jso(jso, indent=0):
    for key, value in jso.items():
        yield f"{'':{indent}s}{key:{12-indent}s}: {value}"


def format_program(program, indent=0):
    yield from format_jso(program, indent=indent)


def format_schedule(schedule, indent=0):
    yield from format_jso(schedule, indent=indent)


def format_job(job):
    fmt = lambda k, v: f"{k:12s}: {v}"
    yield fmt("job_id", job["job_id"])
    yield fmt("url", job["url"])
    yield fmt("params", ", ".join(job["params"]))
    yield "program"
    yield from format_program(job["program"], indent=2)
    yield "schedules"
    for schedule in job["schedules"]:
        yield from format_schedule(schedule, indent=2)


#-------------------------------------------------------------------------------

def cmd_jobs(client, args):
    jobs = client.get_jobs()
    for job in jobs:
        print_lines(format_job(job))
        print()


#-------------------------------------------------------------------------------

logging.basicConfig(level=logging.INFO)

parser = argparse.ArgumentParser()
parser.add_argument(
    "--host", metavar="HOST", default="localhost",
    help="connect to HOST [def: localhost]")
parser.add_argument(
    "--port", metavar="PORT", default=apsis.service.DEFAULT_PORT,
    help=f"connect to PORT [def: {apsis.service.DEFAULT_PORT}]")
commands = parser.add_subparsers(title="commands")

cmd = commands.add_parser("jobs")
cmd.set_defaults(cmd=cmd_jobs)


args = parser.parse_args()

client = apsis.service.client.Client(host=args.host, port=args.port)
args.cmd(client, args)

