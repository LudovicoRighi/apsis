#!/usr/bin/env python

import logging
import sys

import apsis.lib.argparse
import apsis.lib.logging
import apsis.service.client

#-------------------------------------------------------------------------------

apsis.lib.logging.configure()
log = logging.getLogger(__name__)

parser = apsis.lib.argparse.CommandArgumentParser()

default_host, default_port = apsis.service.client.get_host()

parser.add_argument(
    "--host", metavar="HOST", default=default_host,
    help=f"connect to HOST [def: {default_host}]")
parser.add_argument(
    "--port", metavar="PORT", default=default_port,
    help=f"connect to PORT [def: {default_port}]")

def get_client(args):
    return apsis.service.client.Client(host=args.host, port=args.port)


#-------------------------------------------------------------------------------
# command: restart

def cmd_restart(args):
    get_client(args).shut_down(restart=True)


cmd = parser.add_command(
    "restart", cmd_restart,
    description="Restarts the Apsis service.")

#-------------------------------------------------------------------------------
# command: shut_down

def cmd_shut_down(args):
    get_client(args).shut_down()


cmd = parser.add_command(
    "shut_down", cmd_shut_down,
    description="Shuts down the Apsis service.")

#-------------------------------------------------------------------------------

args = parser.parse_args()

try:
    args.cmd(args)
except apsis.service.client.APIError as err:
    print(err, file=sys.stderr)
    raise SystemExit(1)
except (KeyboardInterrupt, BrokenPipeError):
    pass

